import streamlit as st
import requests
import pandas as pd
import plotly.graph_objects as go

# üîë –¢–≤–æ–π API –∫–ª—é—á
API_KEY = "54cdc166-45ae-42fd-bdbb-eff6ad8f3731"
BASE_URL = "https://coinalyze.net/api/v1/liquidations"

# ========================
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ API
# ========================
def get_liquidations(symbol: str):
    headers = {"Authorization": f"Bearer {API_KEY}"}
    params = {"symbol": symbol, "interval": "1h"}  # –ø—Ä–∏–º–µ—Ä: 1h —Å–≤–µ—á–∏
    response = requests.get(BASE_URL, headers=headers, params=params)

    if response.status_code != 200:
        return None, f"–û—à–∏–±–∫–∞ {response.status_code}: {response.text}"

    try:
        data = response.json()
        return data, None
    except Exception as e:
        return None, str(e)

# ========================
# Streamlit UI
# ========================
st.set_page_config(page_title="–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ª–∏–∫–≤–∏–¥–∞—Ü–∏–π Coinalyze", layout="wide")
st.title("üìä –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ª–∏–∫–≤–∏–¥–∞—Ü–∏–π Coinalyze")

# –°–∏–º–≤–æ–ª
symbol = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–∏–º–≤–æ–ª", ["BTCUSDT", "ETHUSDT", "BNBUSDT"])

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
data, error = get_liquidations(symbol)

# –û—Ç–ª–∞–¥–∫–∞
st.write("DEBUG: API –æ—Ç–≤–µ—Ç")
st.json(data if data else {})

if error:
    st.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {error}")
elif not data:
    st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç API.")
else:
    try:
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –ø–æ–ª—è–º–∏:
        # timestamp, long_liquidations, short_liquidations
        df = pd.DataFrame(data)

        # –ü—Ä–∏–≤–æ–¥–∏–º –≤—Ä–µ–º—è
        if "timestamp" in df.columns:
            df["timestamp"] = pd.to_datetime(df["timestamp"], unit="s")

        # –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫
        fig = go.Figure()
        if "long_liquidations" in df.columns:
            fig.add_trace(go.Bar(x=df["timestamp"], y=df["long_liquidations"], name="Longs", marker_color="green"))
        if "short_liquidations" in df.columns:
            fig.add_trace(go.Bar(x=df["timestamp"], y=df["short_liquidations"], name="Shorts", marker_color="red"))

        fig.update_layout(
            title=f"–õ–∏–∫–≤–∏–¥–∞—Ü–∏–∏ {symbol}",
            xaxis_title="–í—Ä–µ–º—è",
            yaxis_title="USD",
            barmode="stack"
        )

        st.plotly_chart(fig, use_container_width=True)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
