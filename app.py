import streamlit as st
import requests
import pandas as pd
import plotly.graph_objects as go

st.set_page_config(page_title="–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ª–∏–∫–≤–∏–¥–∞—Ü–∏–π", layout="wide")

st.title("üìä –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ª–∏–∫–≤–∏–¥–∞—Ü–∏–π Coinalyze")

# --- –í—ã–±–æ—Ä —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
symbol = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å–∏–º–≤–æ–ª", ["BTCUSDT", "ETHUSDT", "BNBUSDT"])

# --- –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —Å API Coinalyze (–∑–∞–º–µ–Ω–∏ URL –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π!)
def get_liquidation_data(symbol: str):
    url = f"https://api.coinalyze.net/liquidations?symbol={symbol}"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return response.json()
        else:
            return {}
    except Exception as e:
        return {"error": str(e)}

# --- –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
data = get_liquidation_data(symbol)

# --- –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥ (–≤–∏–¥–Ω–æ –ø—Ä—è–º–æ –≤ Streamlit)
st.write("DEBUG: API –æ—Ç–≤–µ—Ç", data)

# --- –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
if not data or "error" in data:
    st.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å API.")
    st.stop()

# –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç ‚Äî —Å–ª–æ–≤–∞—Ä—å, –¥–µ–ª–∞–µ–º —Å–ø–∏—Å–æ–∫
if isinstance(data, dict):
    data = [data]

try:
    df = pd.DataFrame(data)
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
    st.stop()

# –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –≤ DataFrame –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
if df.empty:
    st.warning("‚ö†Ô∏è –î–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞")
    st.stop()

# --- –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–π
fig = go.Figure()

fig.add_trace(go.Bar(
    x=df["timestamp"], 
    y=df["long_liquidations"], 
    name="–õ–æ–Ω–≥ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏", 
    marker_color="red"
))

fig.add_trace(go.Bar(
    x=df["timestamp"], 
    y=df["short_liquidations"], 
    name="–®–æ—Ä—Ç –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏", 
    marker_color="green"
))

fig.update_layout(
    title=f"–õ–∏–∫–≤–∏–¥–∞—Ü–∏–∏ {symbol}",
    xaxis_title="–í—Ä–µ–º—è",
    yaxis_title="–û–±—ä—ë–º –ª–∏–∫–≤–∏–¥–∞—Ü–∏–π",
    barmode="group"
)

st.plotly_chart(fig, use_container_width=True)
